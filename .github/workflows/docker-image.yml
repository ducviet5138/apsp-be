name: build docker image and deploy

on:
  push:
    branches:
      - main

permissions:
  actions: read
  contents: read

jobs:
  build_image:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get Current Date and Time in GMT+7
        run: echo "timestamp=$(date -u '+%Y-%m-%d_%H-%M-%S' -d '+7 hours')" >> $GITHUB_ENV

      - name: Write 'firebase-adminsdk.json'
        run: |
          cat << EOF > ./firebase-adminsdk.json
            ${{ secrets.FIREBASE_ADMINSDK_JSON }}
          EOF

      - name: Login Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1
        id: buildx

      - name: Cache Docker Image Layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build and Push Docker Image (APSP-BE)
        uses: docker/build-push-action@v2
        id: docker_build_apsp-be
        with:
          context: ./
          file: ./docker/Dockerfile.service
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: | 
            ${{ secrets.DOCKERHUB_USERNAME }}/apsp-be:${{ env.timestamp }}
            ${{ secrets.DOCKERHUB_USERNAME }}/apsp-be:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Build and Push Docker Image (MIGRATION)
        uses: docker/build-push-action@v2
        id: docker_build_migration
        with:
          context: ./
          file: ./docker/Dockerfile.migration
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/migration:${{ env.timestamp }}
            ${{ secrets.DOCKERHUB_USERNAME }}/migration:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Verify
        run: echo ${{ steps.docker_build.outputs.digest }}

  deploy:
    needs: build_image
    runs-on: ubuntu-latest
    steps: 
      - name: Executing remote ssh command
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_KEY }}
          port: 22
          script: |
            # Move to the project directory
            cd ./apsp-be 
            git reset --hard
            git checkout main
            git pull

            # Write '.env' file
            echo ${{ secrets.SERVER_ENV }} > .env

            # Login to Docker Hub
            docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}

            # Down the current containers and remove all containers and images
            docker compose down
            docker rmi apsp-be-main-app apsp-be-migration

            # Pull the latest images and rename
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/apsp-be:latest
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/migration:latest
            docker tag ${{ secrets.DOCKERHUB_USERNAME }}/apsp-be:latest apsp-be-main-app
            docker tag ${{ secrets.DOCKERHUB_USERNAME }}/migration:latest apsp-be-migration

            # Remove the latest images after renaming
            docker rmi ${{ secrets.DOCKERHUB_USERNAME }}/apsp-be:latest
            docker rmi ${{ secrets.DOCKERHUB_USERNAME }}/migration:latest

            # Remove <none> images
            docker rmi $(docker images -f "dangling=true" -q)

            # Run the containers
            docker compose up -d